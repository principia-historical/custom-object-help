Control panel with support for 8 widgets, capable of overriding signals and receiving feedback from external electronics.

Each widget is connected to 2 output slots and 3 input slots, i.e. any widget 'x' is connected to <b><tt>OUTx</tt></b>, <b><tt>OUT(x+8)</tt></b>, <b><tt>INx</tt></b>, <b><tt>IN(x+8)</tt></b> and <b><tt>IN(x+16)</tt></b>.

* <b><tt>OUT0</tt></b>-7
Raw signal, same as any other RC object. If override mode is enabled, the override value is reported here instead.

* <b><tt>OUT8</tt></b>-15
Reports widget focus. For example, if a slider is dragged and held at 0, the raw signal is 0, but the focus signal is 1. When the slider is released the raw signal remains at 0 and the focus signal turns 0 as well. This can be used to create a recoil effect, when the focus value is 0, send a 1 (inverted focus signal) to the <b><tt>IN16-23</tt></b> (Override enabled/disabled), when the slider is released it will recoil back to 0 (or another value as set through <b><tt>IN8-15</tt></b>).

For a button, the focus signal is always equal to the raw signal, unless the raw signal is overriden (see below).

* <b><tt>IN0-7</tt></b>
Feedback input. Report the current value of the widget here. The current value will be displayed as a visual hint on screen. For example, a button will light up as if pressed, and a slider will show an extra knob at the feedback position. Can be used to, for example, create a toggle button (scroll down to see examples).

* <b><tt>IN8-15</tt></b>
Set the override-value. The value received here is the alternative output value used when override mode is enabled (see below).

* <b><tt>IN16</tt></b> to <b><tt>IN23</tt></b>
Toggles override-mode and selects which output signal to use. A binary value of 0 means the control panel output value is used (from widgets on the screen), and a binary value of 1 means the widget is ignored and the value is overriden and read from <b><tt>IN8-15</tt></b> instead.

<b><big>Examples</big></b>
Example 1) Toggle button
We want a button that each time pressed changes its state. We want the state to be reflected on the visible button. Add a button widget to <b><tt>OUT0</tt></b>, and connect <b><tt>OUT0</tt></b> to a Sparsifier. Then connect the Sparsifier to a Toggler. The output of the Toggler is the value we want. Send the toggler output to <b><tt>IN0</tt></b> (feedback value) and also your own electronics. You now have a toggle button.

Example 2) Slider with recoil
Add a slider widget to <b><tt>OUT0</tt></b>. Connect <b><tt>OUT8</tt></b> (focus) to an Inverter and then to <b><tt>IN16</tt></b> (Override enable/disable). The slider will now recoil to 0 when not focused (inverted focus value = 1), if you want it to recoil to another value than 0, for example 0.5, then connect something to <b><tt>IN8</tt></b> (Set value). 0 is the default value for override if nothing is connected.

Example 3) Slider with springy Recoil
We want to create a slider with a recoil effect that acts like a spring and does not instantly go back to 0. Add a slider widget to <b><tt>OUT0</tt></b>. Connect <b><tt>OUT8</tt></b> (focus) to an Inverter and then to <b><tt>IN16</tt></b> (Override enable/disable). Connect <b><tt>OUT0</tt></b> (raw signal) to your own electronics and separately to a Square component. Connect the Square component to <b><tt>IN8</tt></b> (Override value).

<b><big>Socket information:</big></b>
<b><tt>OUT0-7</tt></b>  Raw signal
<b><tt>OUT8-15</tt></b> Focus signal (0 or 1)
<b><tt>IN0-7</tt></b>   Feedback/report current value
<b><tt>IN8-15</tt></b>  Override value
<b><tt>IN16-23</tt></b> Override enabled/disabled
